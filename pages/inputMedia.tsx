import type { NextPage } from 'next'
import Head from 'next/head'
import { Input } from 'components/Input'
import { useRouter } from 'next/router'
import { useFormStateProvider } from 'context'
import { Header } from 'components/Header'
import { useEffect, useState } from 'react'
import { ethers } from 'ethers'
import { HeroText } from 'components/HeroText'
import { ContinueButton } from 'components/ContinueButton'
import { IoIosClose } from 'react-icons/io'
import { shortenAddress } from 'utils'

const InputMedia: NextPage = () => {
  const router = useRouter()

  // const { media, setMedia } = useFormStateProvider()

  const [media, setMedia] = useState<string[]>([])

  // const [validMedia, setValidMedia] = useState(false)

  // const handleChange = (e: any) => {
  //   setMedia(e.currentTarget.value)
  // }

  // const handleValidation = () => {
  //   if (media != null && ethers.utils.isAddress(media)) {
  //     setValidMedia(true)
  //     router.push('/deploy')
  //   } else {
  //     setValidMedia(false)
  //   }
  // }

  // working with local use state
  const handleKeyDown = (e: any) => {
    if (e.key === 'Enter' || e.code == 'Space') {
      // https://dev.to/0shuvo0/lets-create-an-add-tags-input-with-react-js-d29
      const value = e.currentTarget.value
      if (!value.trim()) return
      if (ethers.utils.isAddress(value)) {
        setMedia([...media, value])
        e.currentTarget.value = ''
      }
    }
  }

  console.log(media)

  return (
    <div>
      <Head>
        {/*
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        */}
      </Head>
      <Header route={'./inputCurationPass'} />
      <div className="flex flex-col gap-6 mt-12 sm:mt-16 sm:gap-8">
        <HeroText
          text={
            <>
              input your&nbsp;<wbr></wbr>
              <span className="hidden sm:block"></span>first&nbsp;
              <span className="pa-displayLight">song</span>
            </>
          }
        />
        <Input
          // value={media}
          placeholder={media ? 'e.g. 0x24535b3be22f1dbc...' : ''}
          // onChange={handleChange}
          onKeyDown={handleKeyDown}
          route={'./deploy'}
        />
        <div className="flex flex-wrap gap-3">
          {media.map((media, index) => (
            <div
              className="flex justify-center items-center bg-black text-[#ecf1f0] px-2 py-1"
              key={index}>
              <span className="pl-2 mb-1">{shortenAddress(media)}</span>
              <IoIosClose className="text-2xl sm:text-4.5" />
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

export default InputMedia

/* <button
onClick={() => router.push('/deploy')}
className="underline text-[#006ff1] hover:text-[#0c1413]">
skip ahead!
</button> */
